

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Oct 13 15:53:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008F                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0095                     	;# 
   116     0096                     	;# 
   117     0097                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     0105                     	;# 
   127     0107                     	;# 
   128     0108                     	;# 
   129     0109                     	;# 
   130     010C                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0185                     	;# 
   136     0187                     	;# 
   137     0188                     	;# 
   138     0189                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     008F                     	;# 
   186     0090                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0095                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     0105                     	;# 
   205     0107                     	;# 
   206     0108                     	;# 
   207     0109                     	;# 
   208     010C                     	;# 
   209     010C                     	;# 
   210     010D                     	;# 
   211     010E                     	;# 
   212     010F                     	;# 
   213     0185                     	;# 
   214     0187                     	;# 
   215     0188                     	;# 
   216     0189                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     000E                     	;# 
   234     000E                     	;# 
   235     000F                     	;# 
   236     0010                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0015                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001B                     	;# 
   250     001C                     	;# 
   251     001D                     	;# 
   252     001E                     	;# 
   253     001F                     	;# 
   254     0081                     	;# 
   255     0085                     	;# 
   256     0086                     	;# 
   257     0087                     	;# 
   258     0088                     	;# 
   259     0089                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     008F                     	;# 
   264     0090                     	;# 
   265     0091                     	;# 
   266     0092                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     0105                     	;# 
   283     0107                     	;# 
   284     0108                     	;# 
   285     0109                     	;# 
   286     010C                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     0185                     	;# 
   292     0187                     	;# 
   293     0188                     	;# 
   294     0189                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     000E                     	;# 
   312     000E                     	;# 
   313     000F                     	;# 
   314     0010                     	;# 
   315     0011                     	;# 
   316     0012                     	;# 
   317     0013                     	;# 
   318     0014                     	;# 
   319     0015                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0017                     	;# 
   323     0018                     	;# 
   324     0019                     	;# 
   325     001A                     	;# 
   326     001B                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001D                     	;# 
   330     001E                     	;# 
   331     001F                     	;# 
   332     0081                     	;# 
   333     0085                     	;# 
   334     0086                     	;# 
   335     0087                     	;# 
   336     0088                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0094                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0097                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009A                     	;# 
   355     009B                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     0105                     	;# 
   361     0107                     	;# 
   362     0108                     	;# 
   363     0109                     	;# 
   364     010C                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     0185                     	;# 
   370     0187                     	;# 
   371     0188                     	;# 
   372     0189                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375     0000                     	;# 
   376     0001                     	;# 
   377     0002                     	;# 
   378     0003                     	;# 
   379     0004                     	;# 
   380     0005                     	;# 
   381     0006                     	;# 
   382     0007                     	;# 
   383     0008                     	;# 
   384     0009                     	;# 
   385     000A                     	;# 
   386     000B                     	;# 
   387     000C                     	;# 
   388     000D                     	;# 
   389     000E                     	;# 
   390     000E                     	;# 
   391     000F                     	;# 
   392     0010                     	;# 
   393     0011                     	;# 
   394     0012                     	;# 
   395     0013                     	;# 
   396     0014                     	;# 
   397     0015                     	;# 
   398     0015                     	;# 
   399     0016                     	;# 
   400     0017                     	;# 
   401     0018                     	;# 
   402     0019                     	;# 
   403     001A                     	;# 
   404     001B                     	;# 
   405     001B                     	;# 
   406     001C                     	;# 
   407     001D                     	;# 
   408     001E                     	;# 
   409     001F                     	;# 
   410     0081                     	;# 
   411     0085                     	;# 
   412     0086                     	;# 
   413     0087                     	;# 
   414     0088                     	;# 
   415     0089                     	;# 
   416     008C                     	;# 
   417     008D                     	;# 
   418     008E                     	;# 
   419     008F                     	;# 
   420     0090                     	;# 
   421     0091                     	;# 
   422     0092                     	;# 
   423     0093                     	;# 
   424     0093                     	;# 
   425     0093                     	;# 
   426     0094                     	;# 
   427     0095                     	;# 
   428     0096                     	;# 
   429     0097                     	;# 
   430     0098                     	;# 
   431     0099                     	;# 
   432     009A                     	;# 
   433     009B                     	;# 
   434     009C                     	;# 
   435     009D                     	;# 
   436     009E                     	;# 
   437     009F                     	;# 
   438     0105                     	;# 
   439     0107                     	;# 
   440     0108                     	;# 
   441     0109                     	;# 
   442     010C                     	;# 
   443     010C                     	;# 
   444     010D                     	;# 
   445     010E                     	;# 
   446     010F                     	;# 
   447     0185                     	;# 
   448     0187                     	;# 
   449     0188                     	;# 
   450     0189                     	;# 
   451     018C                     	;# 
   452     018D                     	;# 
   453                           
   454                           	psect	idataBANK0
   455     043F                     __pidataBANK0:
   456                           
   457                           ;initializer for keypad_getkey@F1268
   458     043F  3431               	retlw	49
   459     0440  3432               	retlw	50
   460     0441  3433               	retlw	51
   461     0442  3441               	retlw	65
   462     0443  3434               	retlw	52
   463     0444  3435               	retlw	53
   464     0445  3436               	retlw	54
   465     0446  3442               	retlw	66
   466     0447  3437               	retlw	55
   467     0448  3438               	retlw	56
   468     0449  3439               	retlw	57
   469     044A  3443               	retlw	67
   470     044B  342A               	retlw	42
   471     044C  3430               	retlw	48
   472     044D  3423               	retlw	35
   473     044E  3444               	retlw	68
   474                           
   475                           	psect	strings
   476     0003                     __pstrings:
   477     0003                     stringtab:
   478     0003                     __stringtab:
   479                           
   480                           ;	String table - string pointers are 1 byte each
   481     0003  1BFF               	btfsc	btemp+1,7
   482     0004  280D               	ljmp	stringcode
   483     0005  1383               	bcf	3,7
   484     0006  187F               	btfsc	btemp+1,0
   485     0007  1783               	bsf	3,7
   486     0008  0800               	movf	0,w
   487     0009  0A84               	incf	4,f
   488     000A  1903               	skipnz
   489     000B  0AFF               	incf	btemp+1,f
   490     000C  0008               	return
   491     000D                     stringcode:
   492     000D                     stringdir:
   493     000D  3000               	movlw	high stringdir
   494     000E  008A               	movwf	10
   495     000F  0804               	movf	4,w
   496     0010  0A84               	incf	4,f
   497     0011  0782               	addwf	2,f
   498     0012                     __stringbase:
   499     0012  3400               	retlw	0
   500     0013                     __end_of__stringtab:
   501     0013                     _password:
   502     0013  3431               	retlw	49
   503     0014  3432               	retlw	50
   504     0015  3433               	retlw	51
   505     0016  3434               	retlw	52
   506     0017  3400               	retlw	0
   507     0018                     __end_of_password:
   508     0008                     _PORTD	set	8
   509     0006                     _PORTB	set	6
   510     0009                     _PORTE	set	9
   511     0041                     _RD1	set	65
   512     0040                     _RD0	set	64
   513     003A                     _RC2	set	58
   514     0038                     _RC0	set	56
   515     0039                     _RC1	set	57
   516     0088                     _TRISD	set	136
   517     0095                     _WPUB	set	149
   518     0081                     _OPTION_REGbits	set	129
   519     0086                     _TRISB	set	134
   520     0087                     _TRISC	set	135
   521     0089                     _TRISE	set	137
   522     008F                     _OSCCON	set	143
   523     0189                     _ANSELH	set	393
   524     0018                     STR_5:
   525     0018  3473               	retlw	115	;'s'
   526     0019  3469               	retlw	105	;'i'
   527     001A  3472               	retlw	114	;'r'
   528     001B  343D               	retlw	61	;'='
   529     001C  3425               	retlw	37	;'%'
   530     001D  3464               	retlw	100	;'d'
   531     001E  342C               	retlw	44	;','
   532     001F  3473               	retlw	115	;'s'
   533     0020  3468               	retlw	104	;'h'
   534     0021  3431               	retlw	49	;'1'
   535     0022  343D               	retlw	61	;'='
   536     0023  3425               	retlw	37	;'%'
   537     0024  3464               	retlw	100	;'d'
   538     0025  342C               	retlw	44	;','
   539     0026  3473               	retlw	115	;'s'
   540     0027  346D               	retlw	109	;'m'
   541     0028  3474               	retlw	116	;'t'
   542     0029  343D               	retlw	61	;'='
   543     002A  3425               	retlw	37	;'%'
   544     002B  3464               	retlw	100	;'d'
   545     002C  3400               	retlw	0
   546     002D                     STR_1:
   547     002D  3470               	retlw	112	;'p'
   548     002E  3461               	retlw	97	;'a'
   549     002F  3473               	retlw	115	;'s'
   550     0030  3473               	retlw	115	;'s'
   551     0031  3477               	retlw	119	;'w'
   552     0032  346F               	retlw	111	;'o'
   553     0033  3472               	retlw	114	;'r'
   554     0034  3464               	retlw	100	;'d'
   555     0035  3420               	retlw	32	;' '
   556     0036  3470               	retlw	112	;'p'
   557     0037  346C               	retlw	108	;'l'
   558     0038  3473               	retlw	115	;'s'
   559     0039  3420               	retlw	32	;' '
   560     003A  343A               	retlw	58	;':'
   561     003B  3444               	retlw	68	;'D'
   562     003C  3400               	retlw	0
   563     003D                     STR_3:
   564     003D  3474               	retlw	116	;'t'
   565     003E  3472               	retlw	114	;'r'
   566     003F  3479               	retlw	121	;'y'
   567     0040  3420               	retlw	32	;' '
   568     0041  3461               	retlw	97	;'a'
   569     0042  3467               	retlw	103	;'g'
   570     0043  3461               	retlw	97	;'a'
   571     0044  3469               	retlw	105	;'i'
   572     0045  346E               	retlw	110	;'n'
   573     0046  3400               	retlw	0
   574     0047                     STR_4:
   575     0047  3462               	retlw	98	;'b'
   576     0048  346C               	retlw	108	;'l'
   577     0049  346F               	retlw	111	;'o'
   578     004A  3463               	retlw	99	;'c'
   579     004B  346B               	retlw	107	;'k'
   580     004C  3465               	retlw	101	;'e'
   581     004D  3464               	retlw	100	;'d'
   582     004E  3400               	retlw	0
   583     004F                     STR_2:
   584     004F  3477               	retlw	119	;'w'
   585     0050  3465               	retlw	101	;'e'
   586     0051  346C               	retlw	108	;'l'
   587     0052  3463               	retlw	99	;'c'
   588     0053  346F               	retlw	111	;'o'
   589     0054  346D               	retlw	109	;'m'
   590     0055  3465               	retlw	101	;'e'
   591     0056  3400               	retlw	0
   592                           
   593                           	psect	cinit
   594     07E6                     start_initialization:	
   595                           ; #config settings
   596                           
   597     07E6                     __initialization:
   598                           
   599                           ; Initialize objects allocated to BANK0
   600     07E6  1383               	bcf	3,7	;select IRP bank0
   601     07E7  305F               	movlw	low (__pdataBANK0+16)
   602     07E8  00FD               	movwf	btemp+-1
   603     07E9  3004               	movlw	high __pidataBANK0
   604     07EA  00FE               	movwf	btemp
   605     07EB  303F               	movlw	low __pidataBANK0
   606     07EC  00FF               	movwf	btemp+1
   607     07ED  304F               	movlw	low __pdataBANK0
   608     07EE  0084               	movwf	4
   609     07EF  120A  118A  2464  120A  118A  	fcall	init_ram0
   610                           
   611                           ; Clear objects allocated to BANK0
   612     07F4  3020               	movlw	low __pbssBANK0
   613     07F5  0084               	movwf	4
   614     07F6  303C               	movlw	low (__pbssBANK0+28)
   615     07F7  120A  118A  2427  120A  118A  	fcall	clear_ram0
   616     07FC                     end_of_initialization:	
   617                           ;End of C runtime variable initialization code
   618                           
   619     07FC                     __end_of__initialization:
   620     07FC  0183               	clrf	3
   621     07FD  120A  118A  2DF9   	ljmp	_main	;jump to C main() function
   622                           
   623                           	psect	bssBANK0
   624     0020                     __pbssBANK0:
   625     0020                     _var_sensor_metal:
   626     0020                     	ds	1
   627     0021                     _var_sensor_hall:
   628     0021                     	ds	1
   629     0022                     _var_sensor_ir:
   630     0022                     	ds	1
   631     0023                     _bro:
   632     0023                     	ds	1
   633     0024                     _idx:
   634     0024                     	ds	1
   635     0025                     _Estado:
   636     0025                     	ds	1
   637     0026                     _buffer:
   638     0026                     	ds	17
   639     0037                     _pass_user:
   640     0037                     	ds	5
   641                           
   642                           	psect	dataBANK0
   643     004F                     __pdataBANK0:
   644     004F                     keypad_getkey@F1268:
   645     004F                     	ds	16
   646                           
   647                           	psect	inittext
   648     0460                     init_fetch0:	
   649                           ;	Called with low address in FSR and high address in W
   650                           
   651     0460  087E               	movf	btemp,w
   652     0461  008A               	movwf	10
   653     0462  087F               	movf	btemp+1,w
   654     0463  0082               	movwf	2
   655     0464                     init_ram0:	
   656                           ;Called with:
   657                           ;	high address of idata address in btemp 
   658                           ;	low address of idata address in btemp+1 
   659                           ;	low address of data in FSR
   660                           ;	high address + 1 of data in btemp-1
   661                           
   662     0464  120A  118A  2460  120A  118A  	fcall	init_fetch0
   663     0469  0080               	movwf	0
   664     046A  0A84               	incf	4,f
   665     046B  0804               	movf	4,w
   666     046C  067D               	xorwf	btemp+-1,w
   667     046D  1903               	btfsc	3,2
   668     046E  3400               	retlw	0
   669     046F  0AFF               	incf	btemp+1,f
   670     0470  1903               	btfsc	3,2
   671     0471  0AFE               	incf	btemp,f
   672     0472  2C64               	goto	init_ram0
   673                           
   674                           	psect	clrtext
   675     0427                     clear_ram0:	
   676                           ;	Called with FSR containing the base address, and
   677                           ;	W with the last address+1
   678                           
   679     0427  0064               	clrwdt	;clear the watchdog before getting into this loop
   680     0428                     clrloop0:
   681     0428  0180               	clrf	0	;clear RAM location pointed to by FSR
   682     0429  0A84               	incf	4,f	;increment pointer
   683     042A  0604               	xorwf	4,w	;XOR with final address
   684     042B  1903               	btfsc	3,2	;have we reached the end yet?
   685     042C  3400               	retlw	0	;all done for this memory range, return
   686     042D  0604               	xorwf	4,w	;XOR again to restore value
   687     042E  2C28               	goto	clrloop0	;do the next byte
   688                           
   689                           	psect	cstackCOMMON
   690     0070                     __pcstackCOMMON:
   691     0070                     ?_LCD_Init:
   692     0070                     ?_keypad_init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ??_keypad_init:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0070                     ?_function_seguridad:	
   699                           ; 1 bytes @ 0x0
   700                           
   701     0070                     ?_function_blocked:	
   702                           ; 1 bytes @ 0x0
   703                           
   704     0070                     ?_function_alarma:	
   705                           ; 1 bytes @ 0x0
   706                           
   707     0070                     ??_function_alarma:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     0070                     ?_LCD_Clear:	
   711                           ; 1 bytes @ 0x0
   712                           
   713     0070                     ?_LCD_Command:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     0070                     ??_LCD_Command:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     0070                     ?_keypad_getkey:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0070                     ??_keypad_getkey:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     0070                     ?_LCD_Char:	
   726                           ; 1 bytes @ 0x0
   727                           
   728     0070                     ??_LCD_Char:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_main:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_strncmp:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     strncmp@s2:	
   738                           ; 2 bytes @ 0x0
   739                           
   740                           
   741                           ; 1 bytes @ 0x0
   742     0070                     	ds	1
   743     0071                     strncmp@len:
   744                           
   745                           ; 2 bytes @ 0x1
   746     0071                     	ds	1
   747     0072                     LCD_Command@cmd:
   748     0072                     LCD_Char@dat:	
   749                           ; 1 bytes @ 0x2
   750                           
   751                           
   752                           ; 1 bytes @ 0x2
   753     0072                     	ds	1
   754     0073                     ??_LCD_Init:
   755     0073                     ??_LCD_Clear:	
   756                           ; 1 bytes @ 0x3
   757                           
   758     0073                     ??_strncmp:	
   759                           ; 1 bytes @ 0x3
   760                           
   761     0073                     ?_LCD_String:	
   762                           ; 1 bytes @ 0x3
   763                           
   764     0073                     function_alarma@i:	
   765                           ; 1 bytes @ 0x3
   766                           
   767     0073                     LCD_String@msg:	
   768                           ; 2 bytes @ 0x3
   769                           
   770                           
   771                           ; 2 bytes @ 0x3
   772     0073                     	ds	2
   773     0075                     ?_LCD_String_xy:
   774     0075                     ??_LCD_String:	
   775                           ; 1 bytes @ 0x5
   776                           
   777     0075                     LCD_String_xy@pos:	
   778                           ; 1 bytes @ 0x5
   779                           
   780     0075                     strncmp@s1:	
   781                           ; 1 bytes @ 0x5
   782                           
   783                           
   784                           ; 1 bytes @ 0x5
   785     0075                     	ds	1
   786     0076                     LCD_String_xy@msg:
   787                           
   788                           ; 2 bytes @ 0x6
   789     0076                     	ds	2
   790     0078                     ??_LCD_String_xy:
   791     0078                     LCD_String_xy@row:	
   792                           ; 1 bytes @ 0x8
   793                           
   794                           
   795                           ; 1 bytes @ 0x8
   796     0078                     	ds	1
   797     0079                     LCD_String_xy@location:
   798                           
   799                           ; 1 bytes @ 0x9
   800     0079                     	ds	1
   801     007A                     ??_function_seguridad:
   802     007A                     ??_function_blocked:	
   803                           ; 1 bytes @ 0xA
   804                           
   805                           
   806                           ; 1 bytes @ 0xA
   807     007A                     	ds	3
   808     007D                     function_seguridad@key:
   809                           
   810                           ; 1 bytes @ 0xD
   811     007D                     	ds	1
   812     007E                     ??_main:
   813                           
   814                           	psect	cstackBANK0
   815     003C                     __pcstackBANK0:	
   816                           ; 1 bytes @ 0xE
   817                           
   818     003C                     keypad_getkey@letras:
   819                           
   820                           ; 16 bytes @ 0x0
   821     003C                     	ds	16
   822     004C                     keypad_getkey@valor:
   823                           
   824                           ; 1 bytes @ 0x10
   825     004C                     	ds	1
   826     004D                     keypad_getkey@i:
   827                           
   828                           ; 2 bytes @ 0x11
   829     004D                     	ds	2
   830                           
   831                           	psect	maintext
   832     05F9                     __pmaintext:	
   833 ;;
   834 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   835 ;;
   836 ;; *************** function _main *****************
   837 ;; Defined at:
   838 ;;		line 57 in file "mainseguridad.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : B00/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0
   855 ;;      Totals:         0       0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels required when called: 4
   858 ;; This function calls:
   859 ;;		_LCD_Init
   860 ;;		_function_alarma
   861 ;;		_function_blocked
   862 ;;		_function_seguridad
   863 ;;		_keypad_init
   864 ;; This function is called by:
   865 ;;		Startup code after reset
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869     05F9                     _main:	
   870                           ;psect for function _main
   871                           
   872     05F9                     l1467:	
   873                           ;incstack = 0
   874                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   875                           
   876                           
   877                           ;mainseguridad.c: 60:     OSCCON = 0x71;
   878     05F9  3071               	movlw	113
   879     05FA  1683               	bsf	3,5	;RP0=1, select bank1
   880     05FB  1303               	bcf	3,6	;RP1=0, select bank1
   881     05FC  008F               	movwf	15	;volatile
   882     05FD                     l1469:
   883                           
   884                           ;mainseguridad.c: 61:     TRISE=0;
   885     05FD  0189               	clrf	9	;volatile
   886     05FE                     l1471:
   887                           
   888                           ;mainseguridad.c: 62:     LCD_Init();
   889     05FE  120A  118A  24E2  120A  118A  	fcall	_LCD_Init
   890     0603                     l1473:
   891                           
   892                           ;mainseguridad.c: 64:     keypad_init();
   893     0603  120A  118A  244F  120A  118A  	fcall	_keypad_init
   894     0608                     l1475:
   895                           
   896                           ;mainseguridad.c: 65:     TRISC=0x07;
   897     0608  3007               	movlw	7
   898     0609  1683               	bsf	3,5	;RP0=1, select bank1
   899     060A  1303               	bcf	3,6	;RP1=0, select bank1
   900     060B  0087               	movwf	7	;volatile
   901     060C                     l1477:
   902                           
   903                           ;mainseguridad.c: 67:     var_sensor_ir = RC1;
   904     060C  3000               	movlw	0
   905     060D  1283               	bcf	3,5	;RP0=0, select bank0
   906     060E  1303               	bcf	3,6	;RP1=0, select bank0
   907     060F  1887               	btfsc	7,1	;volatile
   908     0610  3001               	movlw	1
   909     0611  00A2               	movwf	_var_sensor_ir
   910     0612                     l1479:
   911                           
   912                           ;mainseguridad.c: 68:     var_sensor_hall = RC0;
   913     0612  3000               	movlw	0
   914     0613  1807               	btfsc	7,0	;volatile
   915     0614  3001               	movlw	1
   916     0615  00A1               	movwf	_var_sensor_hall
   917     0616                     l1481:
   918                           
   919                           ;mainseguridad.c: 69:     var_sensor_metal = RC2;
   920     0616  3000               	movlw	0
   921     0617  1907               	btfsc	7,2	;volatile
   922     0618  3001               	movlw	1
   923     0619  00A0               	movwf	_var_sensor_metal
   924     061A                     l1483:
   925                           
   926                           ;mainseguridad.c: 71:     Estado = seguridad;
   927     061A  01A5               	clrf	_Estado
   928     061B                     l1485:
   929                           
   930                           ;mainseguridad.c: 74:         if(Estado == seguridad){
   931     061B  1283               	bcf	3,5	;RP0=0, select bank0
   932     061C  1303               	bcf	3,6	;RP1=0, select bank0
   933     061D  0825               	movf	_Estado,w
   934     061E  1D03               	btfss	3,2
   935     061F  2E21               	goto	u791
   936     0620  2E22               	goto	u790
   937     0621                     u791:
   938     0621  2E28               	goto	l1489
   939     0622                     u790:
   940     0622                     l1487:
   941                           
   942                           ;mainseguridad.c: 75:            function_seguridad();
   943     0622  120A  118A  264A  120A  118A  	fcall	_function_seguridad
   944                           
   945                           ;mainseguridad.c: 76:         }
   946     0627  2E1B               	goto	l1485
   947     0628                     l1489:
   948     0628  0325               	decf	_Estado,w
   949     0629  1D03               	btfss	3,2
   950     062A  2E2C               	goto	u801
   951     062B  2E2D               	goto	u800
   952     062C                     u801:
   953     062C  2E2E               	goto	l1493
   954     062D                     u800:
   955     062D  2E1B               	goto	l1485
   956     062E                     l1493:
   957     062E  3002               	movlw	2
   958     062F  0625               	xorwf	_Estado,w
   959     0630  1D03               	btfss	3,2
   960     0631  2E33               	goto	u811
   961     0632  2E34               	goto	u810
   962     0633                     u811:
   963     0633  2E3A               	goto	l1497
   964     0634                     u810:
   965     0634                     l1495:
   966                           
   967                           ;mainseguridad.c: 81:            function_blocked();
   968     0634  120A  118A  2473  120A  118A  	fcall	_function_blocked
   969                           
   970                           ;mainseguridad.c: 82:         }
   971     0639  2E1B               	goto	l1485
   972     063A                     l1497:
   973     063A  3003               	movlw	3
   974     063B  0625               	xorwf	_Estado,w
   975     063C  1D03               	btfss	3,2
   976     063D  2E3F               	goto	u821
   977     063E  2E40               	goto	u820
   978     063F                     u821:
   979     063F  2E46               	goto	l69
   980     0640                     u820:
   981     0640                     l1499:
   982                           
   983                           ;mainseguridad.c: 84:            function_alarma();
   984     0640  120A  118A  2578  120A  118A  	fcall	_function_alarma
   985     0645  2E1B               	goto	l1485
   986     0646                     l69:
   987     0646  2E1B               	goto	l1485
   988     0647  120A  118A  2800   	ljmp	start
   989     064A                     __end_of_main:
   990                           
   991                           	psect	text1
   992     044F                     __ptext1:	
   993 ;; *************** function _keypad_init *****************
   994 ;; Defined at:
   995 ;;		line 38 in file "keypad.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, btemp+1
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022     044F                     _keypad_init:	
  1023                           ;psect for function _keypad_init
  1024                           
  1025     044F                     l1377:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _keypad_init: [wreg+status,2+status,0+btemp+1]
  1028                           
  1029                           
  1030                           ;keypad.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1031     044F  30F0               	movlw	240
  1032     0450  00FF               	movwf	btemp+1
  1033     0451  087F               	movf	btemp+1,w
  1034     0452  1683               	bsf	3,5	;RP0=1, select bank1
  1035     0453  1303               	bcf	3,6	;RP1=0, select bank1
  1036     0454  0586               	andwf	6,f	;volatile
  1037                           
  1038                           ;keypad.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1039     0455  30F0               	movlw	240
  1040     0456  00FF               	movwf	btemp+1
  1041     0457  087F               	movf	btemp+1,w
  1042     0458  0486               	iorwf	6,f	;volatile
  1043     0459                     l1379:
  1044                           
  1045                           ;keypad.c: 42:     OPTION_REGbits.nRBPU = 0;
  1046     0459  1381               	bcf	1,7	;volatile
  1047     045A                     l1381:
  1048                           
  1049                           ;keypad.c: 43:     WPUB =0xFF;
  1050     045A  30FF               	movlw	255
  1051     045B  0095               	movwf	21	;volatile
  1052     045C                     l1383:
  1053                           
  1054                           ;keypad.c: 44:     ANSELH =0 ;
  1055     045C  1683               	bsf	3,5	;RP0=1, select bank3
  1056     045D  1703               	bsf	3,6	;RP1=1, select bank3
  1057     045E  0189               	clrf	9	;volatile
  1058     045F                     l115:
  1059     045F  0008               	return
  1060     0460                     __end_of_keypad_init:
  1061                           
  1062                           	psect	text2
  1063     064A                     __ptext2:	
  1064 ;; *************** function _function_seguridad *****************
  1065 ;; Defined at:
  1066 ;;		line 93 in file "mainseguridad.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  key             1   13[COMMON] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         1       0       0       0       0
  1082 ;;      Temps:          3       0       0       0       0
  1083 ;;      Totals:         4       0       0       0       0
  1084 ;;Total ram usage:        4 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 3
  1087 ;; This function calls:
  1088 ;;		_LCD_Char
  1089 ;;		_LCD_Clear
  1090 ;;		_LCD_Command
  1091 ;;		_LCD_String_xy
  1092 ;;		_keypad_getkey
  1093 ;;		_strncmp
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099     064A                     _function_seguridad:	
  1100                           ;psect for function _function_seguridad
  1101                           
  1102     064A                     l1385:	
  1103                           ;incstack = 0
  1104                           ; Regs used in _function_seguridad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1105                           
  1106     064A                     l1387:
  1107                           
  1108                           ;mainseguridad.c: 95:     LCD_Clear();
  1109     064A  120A  118A  242F  120A  118A  	fcall	_LCD_Clear
  1110     064F                     l1389:
  1111                           
  1112                           ;mainseguridad.c: 96:     LCD_String_xy(0,0,"password pls :D");
  1113     064F  01F5               	clrf	LCD_String_xy@pos
  1114     0650  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1115     0651  00F6               	movwf	LCD_String_xy@msg
  1116     0652  3080               	movlw	128
  1117     0653  00F7               	movwf	LCD_String_xy@msg+1
  1118     0654  3000               	movlw	0
  1119     0655  120A  118A  24BC  120A  118A  	fcall	_LCD_String_xy
  1120     065A                     l1391:
  1121                           
  1122                           ;mainseguridad.c: 97:         LCD_Command(0xC0);
  1123     065A  30C0               	movlw	192
  1124     065B  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  1125     0660                     l1393:
  1126                           
  1127                           ;mainseguridad.c: 99:             key = keypad_getkey();
  1128     0660  120A  118A  2705  120A  118A  	fcall	_keypad_getkey
  1129     0665  00FD               	movwf	function_seguridad@key
  1130     0666                     l1395:
  1131                           
  1132                           ;mainseguridad.c: 100:             if(key != 0){
  1133     0666  087D               	movf	function_seguridad@key,w
  1134     0667  1903               	btfsc	3,2
  1135     0668  2E6A               	goto	u731
  1136     0669  2E6B               	goto	u730
  1137     066A                     u731:
  1138     066A  2E7D               	goto	l1403
  1139     066B                     u730:
  1140     066B                     l1397:
  1141                           
  1142                           ;mainseguridad.c: 101:                 LCD_Char('*');
  1143     066B  302A               	movlw	42
  1144     066C  120A  118A  2542  120A  118A  	fcall	_LCD_Char
  1145     0671                     l1399:
  1146                           
  1147                           ;mainseguridad.c: 103:                 pass_user[idx++] = key;
  1148     0671  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0672  1303               	bcf	3,6	;RP1=0, select bank0
  1150     0673  0824               	movf	_idx,w
  1151     0674  3E37               	addlw	(low (_pass_user| 0))& (0+255)
  1152     0675  0084               	movwf	4
  1153     0676  087D               	movf	function_seguridad@key,w
  1154     0677  1383               	bcf	3,7	;select IRP bank0
  1155     0678  0080               	movwf	0
  1156     0679                     l1401:
  1157     0679  3001               	movlw	1
  1158     067A  00FF               	movwf	btemp+1
  1159     067B  087F               	movf	btemp+1,w
  1160     067C  07A4               	addwf	_idx,f
  1161     067D                     l1403:
  1162                           
  1163                           ;mainseguridad.c: 105:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1164     067D  3002               	movlw	2
  1165     067E  00FC               	movwf	??_function_seguridad+2
  1166     067F  3004               	movlw	4
  1167     0680  00FB               	movwf	??_function_seguridad+1
  1168     0681  30BA               	movlw	186
  1169     0682  00FA               	movwf	??_function_seguridad
  1170     0683                     u877:
  1171     0683  0BFA               	decfsz	??_function_seguridad,f
  1172     0684  2E83               	goto	u877
  1173     0685  0BFB               	decfsz	??_function_seguridad+1,f
  1174     0686  2E83               	goto	u877
  1175     0687  0BFC               	decfsz	??_function_seguridad+2,f
  1176     0688  2E83               	goto	u877
  1177     0689  0000               	nop
  1178     068A                     l1405:
  1179                           
  1180                           ;mainseguridad.c: 106:         }while(idx < 4);
  1181     068A  3004               	movlw	4
  1182     068B  1283               	bcf	3,5	;RP0=0, select bank0
  1183     068C  1303               	bcf	3,6	;RP1=0, select bank0
  1184     068D  0224               	subwf	_idx,w
  1185     068E  1C03               	skipc
  1186     068F  2E91               	goto	u741
  1187     0690  2E92               	goto	u740
  1188     0691                     u741:
  1189     0691  2E60               	goto	l1393
  1190     0692                     u740:
  1191     0692                     l1407:
  1192                           
  1193                           ;mainseguridad.c: 108:         if(strncmp(pass_user,password,4)==0){
  1194     0692  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  1195     0693  00F0               	movwf	strncmp@s2
  1196     0694  3004               	movlw	4
  1197     0695  00F1               	movwf	strncmp@len
  1198     0696  3000               	movlw	0
  1199     0697  00F2               	movwf	strncmp@len+1
  1200     0698  3037               	movlw	(low (_pass_user| 0))& (0+255)
  1201     0699  120A  118A  25B3  120A  118A  	fcall	_strncmp
  1202     069E  0870               	movf	?_strncmp,w
  1203     069F  0471               	iorwf	?_strncmp+1,w
  1204     06A0  1D03               	btfss	3,2
  1205     06A1  2EA3               	goto	u751
  1206     06A2  2EA4               	goto	u750
  1207     06A3                     u751:
  1208     06A3  2ECB               	goto	l1421
  1209     06A4                     u750:
  1210     06A4                     l1409:
  1211                           
  1212                           ;mainseguridad.c: 109:             LCD_Clear();
  1213     06A4  120A  118A  242F  120A  118A  	fcall	_LCD_Clear
  1214     06A9                     l1411:
  1215                           
  1216                           ;mainseguridad.c: 110:             LCD_String_xy(0,0,"welcome");
  1217     06A9  01F5               	clrf	LCD_String_xy@pos
  1218     06AA  303D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1219     06AB  00F6               	movwf	LCD_String_xy@msg
  1220     06AC  3080               	movlw	128
  1221     06AD  00F7               	movwf	LCD_String_xy@msg+1
  1222     06AE  3000               	movlw	0
  1223     06AF  120A  118A  24BC  120A  118A  	fcall	_LCD_String_xy
  1224     06B4                     l1413:
  1225                           
  1226                           ;mainseguridad.c: 111:             PORTE = 0x02;
  1227     06B4  3002               	movlw	2
  1228     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1229     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1230     06B7  0089               	movwf	9	;volatile
  1231     06B8                     l1415:
  1232                           
  1233                           ;mainseguridad.c: 112:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  1234     06B8  3015               	movlw	21
  1235     06B9  00FC               	movwf	??_function_seguridad+2
  1236     06BA  304B               	movlw	75
  1237     06BB  00FB               	movwf	??_function_seguridad+1
  1238     06BC  30BE               	movlw	190
  1239     06BD  00FA               	movwf	??_function_seguridad
  1240     06BE                     u887:
  1241     06BE  0BFA               	decfsz	??_function_seguridad,f
  1242     06BF  2EBE               	goto	u887
  1243     06C0  0BFB               	decfsz	??_function_seguridad+1,f
  1244     06C1  2EBE               	goto	u887
  1245     06C2  0BFC               	decfsz	??_function_seguridad+2,f
  1246     06C3  2EBE               	goto	u887
  1247     06C4  0000               	nop
  1248     06C5                     l1417:
  1249                           
  1250                           ;mainseguridad.c: 113:             Estado=monitoreo;
  1251     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1252     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1253     06C7  01A5               	clrf	_Estado
  1254     06C8  0AA5               	incf	_Estado,f
  1255     06C9                     l1419:
  1256                           
  1257                           ;mainseguridad.c: 114:             idx=0;
  1258     06C9  01A4               	clrf	_idx
  1259                           
  1260                           ;mainseguridad.c: 115:         }
  1261     06CA  2F04               	goto	l88
  1262     06CB                     l1421:
  1263     06CB  3003               	movlw	3
  1264     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1265     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1266     06CE  0223               	subwf	_bro,w
  1267     06CF  1803               	skipnc
  1268     06D0  2ED2               	goto	u761
  1269     06D1  2ED3               	goto	u760
  1270     06D2                     u761:
  1271     06D2  2EFB               	goto	l1435
  1272     06D3                     u760:
  1273     06D3                     l1423:
  1274                           
  1275                           ;mainseguridad.c: 118:             LCD_Clear();
  1276     06D3  120A  118A  242F  120A  118A  	fcall	_LCD_Clear
  1277     06D8                     l1425:
  1278                           
  1279                           ;mainseguridad.c: 119:             LCD_String_xy(0,0,"try again");
  1280     06D8  01F5               	clrf	LCD_String_xy@pos
  1281     06D9  302B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1282     06DA  00F6               	movwf	LCD_String_xy@msg
  1283     06DB  3080               	movlw	128
  1284     06DC  00F7               	movwf	LCD_String_xy@msg+1
  1285     06DD  3000               	movlw	0
  1286     06DE  120A  118A  24BC  120A  118A  	fcall	_LCD_String_xy
  1287     06E3                     l1427:
  1288                           
  1289                           ;mainseguridad.c: 120:             PORTE = 0x01;
  1290     06E3  3001               	movlw	1
  1291     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1292     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1293     06E6  0089               	movwf	9	;volatile
  1294     06E7                     l1429:
  1295                           
  1296                           ;mainseguridad.c: 121:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  1297     06E7  3015               	movlw	21
  1298     06E8  00FC               	movwf	??_function_seguridad+2
  1299     06E9  304B               	movlw	75
  1300     06EA  00FB               	movwf	??_function_seguridad+1
  1301     06EB  30BE               	movlw	190
  1302     06EC  00FA               	movwf	??_function_seguridad
  1303     06ED                     u897:
  1304     06ED  0BFA               	decfsz	??_function_seguridad,f
  1305     06EE  2EED               	goto	u897
  1306     06EF  0BFB               	decfsz	??_function_seguridad+1,f
  1307     06F0  2EED               	goto	u897
  1308     06F1  0BFC               	decfsz	??_function_seguridad+2,f
  1309     06F2  2EED               	goto	u897
  1310     06F3  0000               	nop
  1311     06F4                     l1431:
  1312                           
  1313                           ;mainseguridad.c: 122:             bro++;
  1314     06F4  3001               	movlw	1
  1315     06F5  00FF               	movwf	btemp+1
  1316     06F6  087F               	movf	btemp+1,w
  1317     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1318     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1319     06F9  07A3               	addwf	_bro,f
  1320     06FA  2EC9               	goto	l1419
  1321     06FB                     l1435:
  1322     06FB  3003               	movlw	3
  1323     06FC  0623               	xorwf	_bro,w
  1324     06FD  1D03               	btfss	3,2
  1325     06FE  2F00               	goto	u771
  1326     06FF  2F01               	goto	u770
  1327     0700                     u771:
  1328     0700  2F04               	goto	l88
  1329     0701                     u770:
  1330     0701                     l1437:
  1331                           
  1332                           ;mainseguridad.c: 126:             idx = 0;
  1333     0701  01A4               	clrf	_idx
  1334     0702                     l1439:
  1335                           
  1336                           ;mainseguridad.c: 127:             Estado=bloqueado;
  1337     0702  3002               	movlw	2
  1338     0703  00A5               	movwf	_Estado
  1339     0704                     l88:
  1340     0704  0008               	return
  1341     0705                     __end_of_function_seguridad:
  1342                           
  1343                           	psect	text3
  1344     05B3                     __ptext3:	
  1345 ;; *************** function _strncmp *****************
  1346 ;; Defined at:
  1347 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strncmp.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  s1              1    wreg     PTR const unsigned char 
  1350 ;;		 -> pass_user(5), 
  1351 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1352 ;;		 -> password(5), 
  1353 ;;  len             2    1[COMMON] unsigned int 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1356 ;;		 -> pass_user(5), 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    0[COMMON] int 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         3       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0
  1368 ;;      Temps:          2       0       0       0       0
  1369 ;;      Totals:         6       0       0       0       0
  1370 ;;Total ram usage:        6 bytes
  1371 ;; Hardware stack levels used: 2
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_function_seguridad
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379     05B3                     _strncmp:	
  1380                           ;psect for function _strncmp
  1381                           
  1382                           
  1383                           ;incstack = 0
  1384                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1385                           ;strncmp@s1 stored from wreg
  1386     05B3  00F5               	movwf	strncmp@s1
  1387     05B4                     l1345:
  1388     05B4  2DE8               	goto	l1357
  1389     05B5                     l1347:
  1390     05B5  0875               	movf	strncmp@s1,w
  1391     05B6  0084               	movwf	4
  1392     05B7  1383               	bcf	3,7	;select IRP bank0
  1393     05B8  0800               	movf	0,w
  1394     05B9  1903               	btfsc	3,2
  1395     05BA  2DBC               	goto	u701
  1396     05BB  2DBD               	goto	u700
  1397     05BC                     u701:
  1398     05BC  2DCD               	goto	l1351
  1399     05BD                     u700:
  1400     05BD                     l1349:
  1401     05BD  0870               	movf	strncmp@s2,w
  1402     05BE  0084               	movwf	4
  1403     05BF  120A  118A  200D  120A  118A  	fcall	stringdir
  1404     05C4  00F3               	movwf	??_strncmp
  1405     05C5  0875               	movf	strncmp@s1,w
  1406     05C6  0084               	movwf	4
  1407     05C7  0800               	movf	0,w
  1408     05C8  0673               	xorwf	??_strncmp,w
  1409     05C9  1903               	skipnz
  1410     05CA  2DCC               	goto	u711
  1411     05CB  2DCD               	goto	u710
  1412     05CC                     u711:
  1413     05CC  2DE0               	goto	l1355
  1414     05CD                     u710:
  1415     05CD                     l1351:
  1416     05CD  0870               	movf	strncmp@s2,w
  1417     05CE  0084               	movwf	4
  1418     05CF  120A  118A  200D  120A  118A  	fcall	stringdir
  1419     05D4  00F3               	movwf	??_strncmp
  1420     05D5  0875               	movf	strncmp@s1,w
  1421     05D6  0084               	movwf	4
  1422     05D7  0800               	movf	0,w
  1423     05D8  00F4               	movwf	??_strncmp+1
  1424     05D9  0873               	movf	??_strncmp,w
  1425     05DA  0274               	subwf	??_strncmp+1,w
  1426     05DB  00F0               	movwf	?_strncmp
  1427     05DC  01F1               	clrf	?_strncmp+1
  1428     05DD  1C03               	skipc
  1429     05DE  03F1               	decf	?_strncmp+1,f
  1430     05DF  2DF8               	goto	l772
  1431     05E0                     l1355:
  1432     05E0  3001               	movlw	1
  1433     05E1  00FF               	movwf	btemp+1
  1434     05E2  087F               	movf	btemp+1,w
  1435     05E3  07F5               	addwf	strncmp@s1,f
  1436     05E4  3001               	movlw	1
  1437     05E5  00FF               	movwf	btemp+1
  1438     05E6  087F               	movf	btemp+1,w
  1439     05E7  07F0               	addwf	strncmp@s2,f
  1440     05E8                     l1357:
  1441     05E8  3001               	movlw	1
  1442     05E9  02F1               	subwf	strncmp@len,f
  1443     05EA  3000               	movlw	0
  1444     05EB  1C03               	skipc
  1445     05EC  03F2               	decf	strncmp@len+1,f
  1446     05ED  02F2               	subwf	strncmp@len+1,f
  1447     05EE  0A71               	incf	strncmp@len,w
  1448     05EF  1D03               	skipz
  1449     05F0  2DF5               	goto	u721
  1450     05F1  0A72               	incf	strncmp@len+1,w
  1451     05F2  1D03               	btfss	3,2
  1452     05F3  2DF5               	goto	u721
  1453     05F4  2DF6               	goto	u720
  1454     05F5                     u721:
  1455     05F5  2DB5               	goto	l1347
  1456     05F6                     u720:
  1457     05F6                     l1359:
  1458     05F6  01F0               	clrf	?_strncmp
  1459     05F7  01F1               	clrf	?_strncmp+1
  1460     05F8                     l772:
  1461     05F8  0008               	return
  1462     05F9                     __end_of_strncmp:
  1463                           
  1464                           	psect	text4
  1465     0705                     __ptext4:	
  1466 ;; *************** function _keypad_getkey *****************
  1467 ;; Defined at:
  1468 ;;		line 60 in file "keypad.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1473 ;;  i               2   17[BANK0 ] int 
  1474 ;;  valor           1   16[BANK0 ] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      unsigned char 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         0      19       0       0       0
  1486 ;;      Temps:          4       0       0       0       0
  1487 ;;      Totals:         4      19       0       0       0
  1488 ;;Total ram usage:       23 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_function_seguridad
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497     0705                     _keypad_getkey:	
  1498                           ;psect for function _keypad_getkey
  1499                           
  1500     0705                     l1245:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1503                           
  1504                           
  1505                           ;keypad.c: 62: char letras[4][4]={ {'1','2','3','A'},
  1506     0705  303C               	movlw	keypad_getkey@letras& (0+255)
  1507     0706  0084               	movwf	4
  1508     0707  304F               	movlw	low keypad_getkey@F1268
  1509     0708  00F0               	movwf	??_keypad_getkey
  1510     0709  0804               	movf	4,w
  1511     070A  00F1               	movwf	??_keypad_getkey+1
  1512     070B  3010               	movlw	16
  1513     070C  00F2               	movwf	??_keypad_getkey+2
  1514     070D                     u480:
  1515     070D  0870               	movf	??_keypad_getkey,w
  1516     070E  0084               	movwf	4
  1517     070F  1383               	bcf	3,7	;select IRP bank0
  1518     0710  0800               	movf	0,w
  1519     0711  00F3               	movwf	??_keypad_getkey+3
  1520     0712  0AF0               	incf	??_keypad_getkey,f
  1521     0713  0871               	movf	??_keypad_getkey+1,w
  1522     0714  0084               	movwf	4
  1523     0715  0873               	movf	??_keypad_getkey+3,w
  1524     0716  0080               	movwf	0
  1525     0717  0AF1               	incf	??_keypad_getkey+1,f
  1526     0718  0BF2               	decfsz	??_keypad_getkey+2,f
  1527     0719  2F0D               	goto	u480
  1528     071A                     l1247:
  1529     071A                     l1249:
  1530                           
  1531                           ;keypad.c: 67: char valor=0;
  1532     071A  1283               	bcf	3,5	;RP0=0, select bank0
  1533     071B  1303               	bcf	3,6	;RP1=0, select bank0
  1534     071C  01CC               	clrf	keypad_getkey@valor
  1535     071D                     l1251:
  1536                           
  1537                           ;keypad.c: 69: for(i=0;i<4;i++){
  1538     071D  01CD               	clrf	keypad_getkey@i
  1539     071E  01CE               	clrf	keypad_getkey@i+1
  1540     071F                     l1257:
  1541                           
  1542                           ;keypad.c: 71:    if(i==0){
  1543     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1544     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1545     0721  084D               	movf	keypad_getkey@i,w
  1546     0722  044E               	iorwf	keypad_getkey@i+1,w
  1547     0723  1D03               	btfss	3,2
  1548     0724  2F26               	goto	u491
  1549     0725  2F27               	goto	u490
  1550     0726                     u491:
  1551     0726  2F4C               	goto	l1277
  1552     0727                     u490:
  1553     0727                     l1259:
  1554                           
  1555                           ;keypad.c: 73:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1556     0727  30FE               	movlw	254
  1557     0728  0086               	movwf	6	;volatile
  1558                           
  1559                           ;keypad.c: 74:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1560     0729  3042               	movlw	66
  1561     072A  00F0               	movwf	??_keypad_getkey
  1562     072B                     u907:
  1563     072B  0BF0               	decfsz	??_keypad_getkey,f
  1564     072C  2F2B               	goto	u907
  1565     072D  0000               	nop
  1566                           
  1567                           ;keypad.c: 75:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1568     072E  2F31               	goto	l1263
  1569     072F                     l1261:
  1570     072F  083C               	movf	keypad_getkey@letras,w
  1571     0730  00CC               	movwf	keypad_getkey@valor
  1572     0731                     l1263:
  1573     0731  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0732  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0733  1E06               	btfss	6,4	;volatile
  1576     0734  2F36               	goto	u501
  1577     0735  2F37               	goto	u500
  1578     0736                     u501:
  1579     0736  2F2F               	goto	l1261
  1580     0737                     u500:
  1581     0737  2F3A               	goto	l1267
  1582     0738                     l1265:
  1583     0738  083D               	movf	keypad_getkey@letras+1,w
  1584     0739  00CC               	movwf	keypad_getkey@valor
  1585     073A                     l1267:
  1586     073A  1E86               	btfss	6,5	;volatile
  1587     073B  2F3D               	goto	u511
  1588     073C  2F3E               	goto	u510
  1589     073D                     u511:
  1590     073D  2F38               	goto	l1265
  1591     073E                     u510:
  1592     073E  2F41               	goto	l1271
  1593     073F                     l1269:
  1594     073F  083E               	movf	keypad_getkey@letras+2,w
  1595     0740  00CC               	movwf	keypad_getkey@valor
  1596     0741                     l1271:
  1597     0741  1F06               	btfss	6,6	;volatile
  1598     0742  2F44               	goto	u521
  1599     0743  2F45               	goto	u520
  1600     0744                     u521:
  1601     0744  2F3F               	goto	l1269
  1602     0745                     u520:
  1603     0745  2F48               	goto	l1275
  1604     0746                     l1273:
  1605     0746  083F               	movf	keypad_getkey@letras+3,w
  1606     0747  00CC               	movwf	keypad_getkey@valor
  1607     0748                     l1275:
  1608     0748  1F86               	btfss	6,7	;volatile
  1609     0749  2F4B               	goto	u531
  1610     074A  2F4C               	goto	u530
  1611     074B                     u531:
  1612     074B  2F46               	goto	l1273
  1613     074C                     u530:
  1614     074C                     l1277:
  1615                           
  1616                           ;keypad.c: 81:    if(i==1){
  1617     074C  034D               	decf	keypad_getkey@i,w
  1618     074D  044E               	iorwf	keypad_getkey@i+1,w
  1619     074E  1D03               	btfss	3,2
  1620     074F  2F51               	goto	u541
  1621     0750  2F52               	goto	u540
  1622     0751                     u541:
  1623     0751  2F77               	goto	l1297
  1624     0752                     u540:
  1625     0752                     l1279:
  1626                           
  1627                           ;keypad.c: 82:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1628     0752  30FD               	movlw	253
  1629     0753  0086               	movwf	6	;volatile
  1630                           
  1631                           ;keypad.c: 83:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1632     0754  3042               	movlw	66
  1633     0755  00F0               	movwf	??_keypad_getkey
  1634     0756                     u917:
  1635     0756  0BF0               	decfsz	??_keypad_getkey,f
  1636     0757  2F56               	goto	u917
  1637     0758  0000               	nop
  1638                           
  1639                           ;keypad.c: 84:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1640     0759  2F5C               	goto	l1283
  1641     075A                     l1281:
  1642     075A  0840               	movf	keypad_getkey@letras+4,w
  1643     075B  00CC               	movwf	keypad_getkey@valor
  1644     075C                     l1283:
  1645     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1646     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1647     075E  1E06               	btfss	6,4	;volatile
  1648     075F  2F61               	goto	u551
  1649     0760  2F62               	goto	u550
  1650     0761                     u551:
  1651     0761  2F5A               	goto	l1281
  1652     0762                     u550:
  1653     0762  2F65               	goto	l1287
  1654     0763                     l1285:
  1655     0763  0841               	movf	keypad_getkey@letras+5,w
  1656     0764  00CC               	movwf	keypad_getkey@valor
  1657     0765                     l1287:
  1658     0765  1E86               	btfss	6,5	;volatile
  1659     0766  2F68               	goto	u561
  1660     0767  2F69               	goto	u560
  1661     0768                     u561:
  1662     0768  2F63               	goto	l1285
  1663     0769                     u560:
  1664     0769  2F6C               	goto	l1291
  1665     076A                     l1289:
  1666     076A  0842               	movf	keypad_getkey@letras+6,w
  1667     076B  00CC               	movwf	keypad_getkey@valor
  1668     076C                     l1291:
  1669     076C  1F06               	btfss	6,6	;volatile
  1670     076D  2F6F               	goto	u571
  1671     076E  2F70               	goto	u570
  1672     076F                     u571:
  1673     076F  2F6A               	goto	l1289
  1674     0770                     u570:
  1675     0770  2F73               	goto	l1295
  1676     0771                     l1293:
  1677     0771  0843               	movf	keypad_getkey@letras+7,w
  1678     0772  00CC               	movwf	keypad_getkey@valor
  1679     0773                     l1295:
  1680     0773  1F86               	btfss	6,7	;volatile
  1681     0774  2F76               	goto	u581
  1682     0775  2F77               	goto	u580
  1683     0776                     u581:
  1684     0776  2F71               	goto	l1293
  1685     0777                     u580:
  1686     0777                     l1297:
  1687                           
  1688                           ;keypad.c: 90:    if(i==2){
  1689     0777  3002               	movlw	2
  1690     0778  064D               	xorwf	keypad_getkey@i,w
  1691     0779  044E               	iorwf	keypad_getkey@i+1,w
  1692     077A  1D03               	btfss	3,2
  1693     077B  2F7D               	goto	u591
  1694     077C  2F7E               	goto	u590
  1695     077D                     u591:
  1696     077D  2FA3               	goto	l1317
  1697     077E                     u590:
  1698     077E                     l1299:
  1699                           
  1700                           ;keypad.c: 91:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1701     077E  30FB               	movlw	251
  1702     077F  0086               	movwf	6	;volatile
  1703                           
  1704                           ;keypad.c: 92:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1705     0780  3042               	movlw	66
  1706     0781  00F0               	movwf	??_keypad_getkey
  1707     0782                     u927:
  1708     0782  0BF0               	decfsz	??_keypad_getkey,f
  1709     0783  2F82               	goto	u927
  1710     0784  0000               	nop
  1711                           
  1712                           ;keypad.c: 93:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1713     0785  2F88               	goto	l1303
  1714     0786                     l1301:
  1715     0786  0844               	movf	keypad_getkey@letras+8,w
  1716     0787  00CC               	movwf	keypad_getkey@valor
  1717     0788                     l1303:
  1718     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1719     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1720     078A  1E06               	btfss	6,4	;volatile
  1721     078B  2F8D               	goto	u601
  1722     078C  2F8E               	goto	u600
  1723     078D                     u601:
  1724     078D  2F86               	goto	l1301
  1725     078E                     u600:
  1726     078E  2F91               	goto	l1307
  1727     078F                     l1305:
  1728     078F  0845               	movf	keypad_getkey@letras+9,w
  1729     0790  00CC               	movwf	keypad_getkey@valor
  1730     0791                     l1307:
  1731     0791  1E86               	btfss	6,5	;volatile
  1732     0792  2F94               	goto	u611
  1733     0793  2F95               	goto	u610
  1734     0794                     u611:
  1735     0794  2F8F               	goto	l1305
  1736     0795                     u610:
  1737     0795  2F98               	goto	l1311
  1738     0796                     l1309:
  1739     0796  0846               	movf	keypad_getkey@letras+10,w
  1740     0797  00CC               	movwf	keypad_getkey@valor
  1741     0798                     l1311:
  1742     0798  1F06               	btfss	6,6	;volatile
  1743     0799  2F9B               	goto	u621
  1744     079A  2F9C               	goto	u620
  1745     079B                     u621:
  1746     079B  2F96               	goto	l1309
  1747     079C                     u620:
  1748     079C  2F9F               	goto	l1315
  1749     079D                     l1313:
  1750     079D  0847               	movf	keypad_getkey@letras+11,w
  1751     079E  00CC               	movwf	keypad_getkey@valor
  1752     079F                     l1315:
  1753     079F  1F86               	btfss	6,7	;volatile
  1754     07A0  2FA2               	goto	u631
  1755     07A1  2FA3               	goto	u630
  1756     07A2                     u631:
  1757     07A2  2F9D               	goto	l1313
  1758     07A3                     u630:
  1759     07A3                     l1317:
  1760                           
  1761                           ;keypad.c: 99:    if(i==3){
  1762     07A3  3003               	movlw	3
  1763     07A4  064D               	xorwf	keypad_getkey@i,w
  1764     07A5  044E               	iorwf	keypad_getkey@i+1,w
  1765     07A6  1D03               	btfss	3,2
  1766     07A7  2FA9               	goto	u641
  1767     07A8  2FAA               	goto	u640
  1768     07A9                     u641:
  1769     07A9  2FCF               	goto	l1337
  1770     07AA                     u640:
  1771     07AA                     l1319:
  1772                           
  1773                           ;keypad.c: 100:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1774     07AA  30F7               	movlw	247
  1775     07AB  0086               	movwf	6	;volatile
  1776                           
  1777                           ;keypad.c: 101:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1778     07AC  3042               	movlw	66
  1779     07AD  00F0               	movwf	??_keypad_getkey
  1780     07AE                     u937:
  1781     07AE  0BF0               	decfsz	??_keypad_getkey,f
  1782     07AF  2FAE               	goto	u937
  1783     07B0  0000               	nop
  1784                           
  1785                           ;keypad.c: 102:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1786     07B1  2FB4               	goto	l1323
  1787     07B2                     l1321:
  1788     07B2  0848               	movf	keypad_getkey@letras+12,w
  1789     07B3  00CC               	movwf	keypad_getkey@valor
  1790     07B4                     l1323:
  1791     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1792     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1793     07B6  1E06               	btfss	6,4	;volatile
  1794     07B7  2FB9               	goto	u651
  1795     07B8  2FBA               	goto	u650
  1796     07B9                     u651:
  1797     07B9  2FB2               	goto	l1321
  1798     07BA                     u650:
  1799     07BA  2FBD               	goto	l1327
  1800     07BB                     l1325:
  1801     07BB  0849               	movf	keypad_getkey@letras+13,w
  1802     07BC  00CC               	movwf	keypad_getkey@valor
  1803     07BD                     l1327:
  1804     07BD  1E86               	btfss	6,5	;volatile
  1805     07BE  2FC0               	goto	u661
  1806     07BF  2FC1               	goto	u660
  1807     07C0                     u661:
  1808     07C0  2FBB               	goto	l1325
  1809     07C1                     u660:
  1810     07C1  2FC4               	goto	l1331
  1811     07C2                     l1329:
  1812     07C2  084A               	movf	keypad_getkey@letras+14,w
  1813     07C3  00CC               	movwf	keypad_getkey@valor
  1814     07C4                     l1331:
  1815     07C4  1F06               	btfss	6,6	;volatile
  1816     07C5  2FC7               	goto	u671
  1817     07C6  2FC8               	goto	u670
  1818     07C7                     u671:
  1819     07C7  2FC2               	goto	l1329
  1820     07C8                     u670:
  1821     07C8  2FCB               	goto	l1335
  1822     07C9                     l1333:
  1823     07C9  084B               	movf	keypad_getkey@letras+15,w
  1824     07CA  00CC               	movwf	keypad_getkey@valor
  1825     07CB                     l1335:
  1826     07CB  1F86               	btfss	6,7	;volatile
  1827     07CC  2FCE               	goto	u681
  1828     07CD  2FCF               	goto	u680
  1829     07CE                     u681:
  1830     07CE  2FC9               	goto	l1333
  1831     07CF                     u680:
  1832     07CF                     l1337:
  1833                           
  1834                           ;keypad.c: 107:    }
  1835     07CF  3001               	movlw	1
  1836     07D0  07CD               	addwf	keypad_getkey@i,f
  1837     07D1  1803               	skipnc
  1838     07D2  0ACE               	incf	keypad_getkey@i+1,f
  1839     07D3  3000               	movlw	0
  1840     07D4  07CE               	addwf	keypad_getkey@i+1,f
  1841     07D5                     l1339:
  1842     07D5  084E               	movf	keypad_getkey@i+1,w
  1843     07D6  3A80               	xorlw	128
  1844     07D7  00FF               	movwf	btemp+1
  1845     07D8  3080               	movlw	128
  1846     07D9  027F               	subwf	btemp+1,w
  1847     07DA  1D03               	skipz
  1848     07DB  2FDE               	goto	u695
  1849     07DC  3004               	movlw	4
  1850     07DD  024D               	subwf	keypad_getkey@i,w
  1851     07DE                     u695:
  1852     07DE  1C03               	skipc
  1853     07DF  2FE1               	goto	u691
  1854     07E0  2FE2               	goto	u690
  1855     07E1                     u691:
  1856     07E1  2F1F               	goto	l1257
  1857     07E2                     u690:
  1858     07E2                     l1341:
  1859                           
  1860                           ;keypad.c: 109:    return valor;
  1861     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1862     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1863     07E4  084C               	movf	keypad_getkey@valor,w
  1864     07E5                     l174:
  1865     07E5  0008               	return
  1866     07E6                     __end_of_keypad_getkey:
  1867                           
  1868                           	psect	text5
  1869     0473                     __ptext5:	
  1870 ;; *************** function _function_blocked *****************
  1871 ;; Defined at:
  1872 ;;		line 132 in file "mainseguridad.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          3       0       0       0       0
  1889 ;;      Totals:         3       0       0       0       0
  1890 ;;Total ram usage:        3 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 3
  1893 ;; This function calls:
  1894 ;;		_LCD_Clear
  1895 ;;		_LCD_String_xy
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901     0473                     _function_blocked:	
  1902                           ;psect for function _function_blocked
  1903                           
  1904     0473                     l1441:	
  1905                           ;incstack = 0
  1906                           ; Regs used in _function_blocked: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1907                           
  1908                           
  1909                           ;mainseguridad.c: 133:             LCD_Clear();
  1910     0473  120A  118A  242F  120A  118A  	fcall	_LCD_Clear
  1911     0478                     l1443:
  1912                           
  1913                           ;mainseguridad.c: 134:             LCD_String_xy(0,0,"blocked");
  1914     0478  01F5               	clrf	LCD_String_xy@pos
  1915     0479  3035               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1916     047A  00F6               	movwf	LCD_String_xy@msg
  1917     047B  3080               	movlw	128
  1918     047C  00F7               	movwf	LCD_String_xy@msg+1
  1919     047D  3000               	movlw	0
  1920     047E  120A  118A  24BC  120A  118A  	fcall	_LCD_String_xy
  1921     0483                     l1445:
  1922                           
  1923                           ;mainseguridad.c: 135:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  1924     0483  3033               	movlw	51
  1925     0484  00FC               	movwf	??_function_blocked+2
  1926     0485  30BB               	movlw	187
  1927     0486  00FB               	movwf	??_function_blocked+1
  1928     0487  30DF               	movlw	223
  1929     0488  00FA               	movwf	??_function_blocked
  1930     0489                     u947:
  1931     0489  0BFA               	decfsz	??_function_blocked,f
  1932     048A  2C89               	goto	u947
  1933     048B  0BFB               	decfsz	??_function_blocked+1,f
  1934     048C  2C89               	goto	u947
  1935     048D  0BFC               	decfsz	??_function_blocked+2,f
  1936     048E  2C89               	goto	u947
  1937     048F  2C90               	nop2
  1938     0490                     l1447:
  1939                           
  1940                           ;mainseguridad.c: 136:             PORTE = 0x04;
  1941     0490  3004               	movlw	4
  1942     0491  1283               	bcf	3,5	;RP0=0, select bank0
  1943     0492  1303               	bcf	3,6	;RP1=0, select bank0
  1944     0493  0089               	movwf	9	;volatile
  1945     0494                     l1449:
  1946                           
  1947                           ;mainseguridad.c: 137:             Estado=seguridad;
  1948     0494  01A5               	clrf	_Estado
  1949     0495                     l91:
  1950     0495  0008               	return
  1951     0496                     __end_of_function_blocked:
  1952                           
  1953                           	psect	text6
  1954     04BC                     __ptext6:	
  1955 ;; *************** function _LCD_String_xy *****************
  1956 ;; Defined at:
  1957 ;;		line 115 in file "lcd.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  row             1    wreg     unsigned char 
  1960 ;;  pos             1    5[COMMON] unsigned char 
  1961 ;;  msg             2    6[COMMON] PTR const unsigned char 
  1962 ;;		 -> buffer(17), STR_4(8), STR_3(10), STR_2(8), 
  1963 ;;		 -> STR_1(16), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  row             1    8[COMMON] unsigned char 
  1966 ;;  location        1    9[COMMON] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         3       0       0       0       0
  1977 ;;      Locals:         2       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0
  1979 ;;      Totals:         5       0       0       0       0
  1980 ;;Total ram usage:        5 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 2
  1983 ;; This function calls:
  1984 ;;		_LCD_Command
  1985 ;;		_LCD_String
  1986 ;; This function is called by:
  1987 ;;		_function_seguridad
  1988 ;;		_function_blocked
  1989 ;;		_function_monitoreo
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     04BC                     _LCD_String_xy:	
  1994                           ;psect for function _LCD_String_xy
  1995                           
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1999                           ;LCD_String_xy@row stored from wreg
  2000     04BC  00F8               	movwf	LCD_String_xy@row
  2001     04BD                     l1231:
  2002     04BD                     l1233:
  2003                           
  2004                           ;lcd.c: 118:     if(row<=1)
  2005     04BD  3002               	movlw	2
  2006     04BE  0278               	subwf	LCD_String_xy@row,w
  2007     04BF  1803               	skipnc
  2008     04C0  2CC2               	goto	u471
  2009     04C1  2CC3               	goto	u470
  2010     04C2                     u471:
  2011     04C2  2CCE               	goto	l1239
  2012     04C3                     u470:
  2013     04C3                     l1235:
  2014                           
  2015                           ;lcd.c: 119:     {;lcd.c: 120:         location=(0x80) | ((pos) & 0x0f);
  2016     04C3  0875               	movf	LCD_String_xy@pos,w
  2017     04C4  390F               	andlw	15
  2018     04C5  3880               	iorlw	128
  2019     04C6  00F9               	movwf	LCD_String_xy@location
  2020     04C7                     l1237:
  2021                           
  2022                           ;lcd.c: 121:         LCD_Command(location);
  2023     04C7  0879               	movf	LCD_String_xy@location,w
  2024     04C8  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2025                           
  2026                           ;lcd.c: 122:     }
  2027     04CD  2CD8               	goto	l1243
  2028     04CE                     l1239:
  2029                           
  2030                           ;lcd.c: 124:     {;lcd.c: 125:         location=(0xC0) | ((pos) & 0x0f);
  2031     04CE  0875               	movf	LCD_String_xy@pos,w
  2032     04CF  390F               	andlw	15
  2033     04D0  38C0               	iorlw	192
  2034     04D1  00F9               	movwf	LCD_String_xy@location
  2035     04D2                     l1241:
  2036                           
  2037                           ;lcd.c: 126:         LCD_Command(location);
  2038     04D2  0879               	movf	LCD_String_xy@location,w
  2039     04D3  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2040     04D8                     l1243:
  2041                           
  2042                           ;lcd.c: 130:     LCD_String(msg);
  2043     04D8  0876               	movf	LCD_String_xy@msg,w
  2044     04D9  00F3               	movwf	LCD_String@msg
  2045     04DA  0877               	movf	LCD_String_xy@msg+1,w
  2046     04DB  00F4               	movwf	LCD_String@msg+1
  2047     04DC  120A  118A  2496  120A  118A  	fcall	_LCD_String
  2048     04E1                     l208:
  2049     04E1  0008               	return
  2050     04E2                     __end_of_LCD_String_xy:
  2051                           
  2052                           	psect	text7
  2053     0496                     __ptext7:	
  2054 ;; *************** function _LCD_String *****************
  2055 ;; Defined at:
  2056 ;;		line 105 in file "lcd.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  msg             2    3[COMMON] PTR const unsigned char 
  2059 ;;		 -> buffer(17), STR_4(8), STR_3(10), STR_2(8), 
  2060 ;;		 -> STR_1(16), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         2       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0
  2075 ;;      Totals:         2       0       0       0       0
  2076 ;;Total ram usage:        2 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 1
  2079 ;; This function calls:
  2080 ;;		_LCD_Char
  2081 ;; This function is called by:
  2082 ;;		_LCD_String_xy
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086     0496                     _LCD_String:	
  2087                           ;psect for function _LCD_String
  2088                           
  2089     0496                     l1219:	
  2090                           ;incstack = 0
  2091                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2092                           
  2093                           
  2094                           ;lcd.c: 105: void LCD_String(const char *msg);lcd.c: 106: {;lcd.c: 107:  while((*msg)!=0
      +                          )
  2095     0496  2CAB               	goto	l1225
  2096     0497                     l1221:
  2097                           
  2098                           ;lcd.c: 108:  {;lcd.c: 109:    LCD_Char(*msg);
  2099     0497  0874               	movf	LCD_String@msg+1,w
  2100     0498  00FF               	movwf	btemp+1
  2101     0499  0873               	movf	LCD_String@msg,w
  2102     049A  0084               	movwf	4
  2103     049B  120A  118A  2003  120A  118A  	fcall	stringtab
  2104     04A0  120A  118A  2542  120A  118A  	fcall	_LCD_Char
  2105     04A5                     l1223:
  2106                           
  2107                           ;lcd.c: 110:    msg++;
  2108     04A5  3001               	movlw	1
  2109     04A6  07F3               	addwf	LCD_String@msg,f
  2110     04A7  1803               	skipnc
  2111     04A8  0AF4               	incf	LCD_String@msg+1,f
  2112     04A9  3000               	movlw	0
  2113     04AA  07F4               	addwf	LCD_String@msg+1,f
  2114     04AB                     l1225:
  2115                           
  2116                           ;lcd.c: 107:  while((*msg)!=0)
  2117     04AB  0874               	movf	LCD_String@msg+1,w
  2118     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2119     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2120     04AE  00FF               	movwf	btemp+1
  2121     04AF  0873               	movf	LCD_String@msg,w
  2122     04B0  0084               	movwf	4
  2123     04B1  120A  118A  2003  120A  118A  	fcall	stringtab
  2124     04B6  3A00               	xorlw	0
  2125     04B7  1D03               	skipz
  2126     04B8  2CBA               	goto	u461
  2127     04B9  2CBB               	goto	u460
  2128     04BA                     u461:
  2129     04BA  2C97               	goto	l1221
  2130     04BB                     u460:
  2131     04BB                     l203:
  2132     04BB  0008               	return
  2133     04BC                     __end_of_LCD_String:
  2134                           
  2135                           	psect	text8
  2136     0542                     __ptext8:	
  2137 ;; *************** function _LCD_Char *****************
  2138 ;; Defined at:
  2139 ;;		line 90 in file "lcd.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  dat             1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  dat             1    2[COMMON] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0
  2155 ;;      Temps:          2       0       0       0       0
  2156 ;;      Totals:         3       0       0       0       0
  2157 ;;Total ram usage:        3 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_function_seguridad
  2163 ;;		_LCD_String
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167     0542                     _LCD_Char:	
  2168                           ;psect for function _LCD_Char
  2169                           
  2170                           
  2171                           ;incstack = 0
  2172                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  2173                           ;LCD_Char@dat stored from wreg
  2174     0542  00F2               	movwf	LCD_Char@dat
  2175     0543                     l1179:
  2176                           
  2177                           ;lcd.c: 90: void LCD_Char(unsigned char dat);lcd.c: 91: {;lcd.c: 92:  PORTD = (PORTD & 0
      +                          x0f) | (0xF0 & dat);
  2178     0543  30F0               	movlw	240
  2179     0544  0572               	andwf	LCD_Char@dat,w
  2180     0545  00F0               	movwf	??_LCD_Char
  2181     0546  1283               	bcf	3,5	;RP0=0, select bank0
  2182     0547  1303               	bcf	3,6	;RP1=0, select bank0
  2183     0548  0808               	movf	8,w	;volatile
  2184     0549  390F               	andlw	15
  2185     054A  0470               	iorwf	??_LCD_Char,w
  2186     054B  0088               	movwf	8	;volatile
  2187     054C                     l1181:
  2188                           
  2189                           ;lcd.c: 93:  RD0 = 1;
  2190     054C  1408               	bsf	8,0	;volatile
  2191     054D                     l1183:
  2192                           
  2193                           ;lcd.c: 94:  RD1 = 1;
  2194     054D  1488               	bsf	8,1	;volatile
  2195     054E                     l1185:
  2196                           
  2197                           ;lcd.c: 95:  __nop();
  2198     054E  0000               	nop
  2199     054F                     l1187:
  2200                           
  2201                           ;lcd.c: 96:  RD1 = 0;
  2202     054F  1283               	bcf	3,5	;RP0=0, select bank0
  2203     0550  1303               	bcf	3,6	;RP1=0, select bank0
  2204     0551  1088               	bcf	8,1	;volatile
  2205     0552                     l1189:
  2206                           
  2207                           ;lcd.c: 97:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2208     0552  3003               	movlw	3
  2209     0553  00F1               	movwf	??_LCD_Char+1
  2210     0554  3097               	movlw	151
  2211     0555  00F0               	movwf	??_LCD_Char
  2212     0556                     u957:
  2213     0556  0BF0               	decfsz	??_LCD_Char,f
  2214     0557  2D56               	goto	u957
  2215     0558  0BF1               	decfsz	??_LCD_Char+1,f
  2216     0559  2D56               	goto	u957
  2217     055A  2D5B               	nop2
  2218     055B                     l1191:
  2219                           
  2220                           ;lcd.c: 98:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  2221     055B  0872               	movf	LCD_Char@dat,w
  2222     055C  00F0               	movwf	??_LCD_Char
  2223     055D  3004               	movlw	4
  2224     055E                     u445:
  2225     055E  1003               	clrc
  2226     055F  0DF0               	rlf	??_LCD_Char,f
  2227     0560  3EFF               	addlw	-1
  2228     0561  1D03               	skipz
  2229     0562  2D5E               	goto	u445
  2230     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2231     0564  1303               	bcf	3,6	;RP1=0, select bank0
  2232     0565  0808               	movf	8,w	;volatile
  2233     0566  390F               	andlw	15
  2234     0567  0470               	iorwf	??_LCD_Char,w
  2235     0568  0088               	movwf	8	;volatile
  2236     0569                     l1193:
  2237                           
  2238                           ;lcd.c: 99:  RD1 = 1;
  2239     0569  1488               	bsf	8,1	;volatile
  2240     056A                     l1195:
  2241                           
  2242                           ;lcd.c: 100:  __nop();
  2243     056A  0000               	nop
  2244     056B                     l1197:
  2245                           
  2246                           ;lcd.c: 101:  RD1 = 0;
  2247     056B  1283               	bcf	3,5	;RP0=0, select bank0
  2248     056C  1303               	bcf	3,6	;RP1=0, select bank0
  2249     056D  1088               	bcf	8,1	;volatile
  2250                           
  2251                           ;lcd.c: 102:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2252     056E  3008               	movlw	8
  2253     056F  00F1               	movwf	??_LCD_Char+1
  2254     0570  30C9               	movlw	201
  2255     0571  00F0               	movwf	??_LCD_Char
  2256     0572                     u967:
  2257     0572  0BF0               	decfsz	??_LCD_Char,f
  2258     0573  2D72               	goto	u967
  2259     0574  0BF1               	decfsz	??_LCD_Char+1,f
  2260     0575  2D72               	goto	u967
  2261     0576  2D77               	nop2
  2262     0577                     l197:
  2263     0577  0008               	return
  2264     0578                     __end_of_LCD_Char:
  2265                           
  2266                           	psect	text9
  2267     042F                     __ptext9:	
  2268 ;; *************** function _LCD_Clear *****************
  2269 ;; Defined at:
  2270 ;;		line 146 in file "lcd.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          2       0       0       0       0
  2287 ;;      Totals:         2       0       0       0       0
  2288 ;;Total ram usage:        2 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 1
  2291 ;; This function calls:
  2292 ;;		_LCD_Command
  2293 ;; This function is called by:
  2294 ;;		_function_seguridad
  2295 ;;		_function_blocked
  2296 ;;		_function_monitoreo
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300     042F                     _LCD_Clear:	
  2301                           ;psect for function _LCD_Clear
  2302                           
  2303     042F                     l1227:	
  2304                           ;incstack = 0
  2305                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2306                           
  2307                           
  2308                           ;lcd.c: 148:     LCD_Command(0x01);
  2309     042F  3001               	movlw	1
  2310     0430  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2311     0435                     l1229:
  2312                           
  2313                           ;lcd.c: 149:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2314     0435  3008               	movlw	8
  2315     0436  00F4               	movwf	??_LCD_Clear+1
  2316     0437  30C9               	movlw	201
  2317     0438  00F3               	movwf	??_LCD_Clear
  2318     0439                     u977:
  2319     0439  0BF3               	decfsz	??_LCD_Clear,f
  2320     043A  2C39               	goto	u977
  2321     043B  0BF4               	decfsz	??_LCD_Clear+1,f
  2322     043C  2C39               	goto	u977
  2323     043D  2C3E               	nop2
  2324     043E                     l211:
  2325     043E  0008               	return
  2326     043F                     __end_of_LCD_Clear:
  2327                           
  2328                           	psect	text10
  2329     0578                     __ptext10:	
  2330 ;; *************** function _function_alarma *****************
  2331 ;; Defined at:
  2332 ;;		line 149 in file "mainseguridad.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  i               2    3[COMMON] int 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, btemp+1
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         0       0       0       0       0
  2347 ;;      Locals:         2       0       0       0       0
  2348 ;;      Temps:          3       0       0       0       0
  2349 ;;      Totals:         5       0       0       0       0
  2350 ;;Total ram usage:        5 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359     0578                     _function_alarma:	
  2360                           ;psect for function _function_alarma
  2361                           
  2362     0578                     l1451:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _function_alarma: [wreg+status,2+btemp+1]
  2365                           
  2366                           
  2367                           ;mainseguridad.c: 151:    for(int i=0; i<5; i++){
  2368     0578  01F3               	clrf	function_alarma@i
  2369     0579  01F4               	clrf	function_alarma@i+1
  2370     057A                     l1457:
  2371                           
  2372                           ;mainseguridad.c: 152:     PORTE=0x04;
  2373     057A  3004               	movlw	4
  2374     057B  1283               	bcf	3,5	;RP0=0, select bank0
  2375     057C  1303               	bcf	3,6	;RP1=0, select bank0
  2376     057D  0089               	movwf	9	;volatile
  2377                           
  2378                           ;mainseguridad.c: 153:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2379     057E  3006               	movlw	6
  2380     057F  00F2               	movwf	??_function_alarma+2
  2381     0580  3013               	movlw	19
  2382     0581  00F1               	movwf	??_function_alarma+1
  2383     0582  30AD               	movlw	173
  2384     0583  00F0               	movwf	??_function_alarma
  2385     0584                     u987:
  2386     0584  0BF0               	decfsz	??_function_alarma,f
  2387     0585  2D84               	goto	u987
  2388     0586  0BF1               	decfsz	??_function_alarma+1,f
  2389     0587  2D84               	goto	u987
  2390     0588  0BF2               	decfsz	??_function_alarma+2,f
  2391     0589  2D84               	goto	u987
  2392     058A  2D8B               	nop2
  2393     058B                     l1459:
  2394                           
  2395                           ;mainseguridad.c: 154:     PORTE=0x00;
  2396     058B  1283               	bcf	3,5	;RP0=0, select bank0
  2397     058C  1303               	bcf	3,6	;RP1=0, select bank0
  2398     058D  0189               	clrf	9	;volatile
  2399     058E                     l1461:
  2400                           
  2401                           ;mainseguridad.c: 155:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2402     058E  3006               	movlw	6
  2403     058F  00F2               	movwf	??_function_alarma+2
  2404     0590  3013               	movlw	19
  2405     0591  00F1               	movwf	??_function_alarma+1
  2406     0592  30AD               	movlw	173
  2407     0593  00F0               	movwf	??_function_alarma
  2408     0594                     u997:
  2409     0594  0BF0               	decfsz	??_function_alarma,f
  2410     0595  2D94               	goto	u997
  2411     0596  0BF1               	decfsz	??_function_alarma+1,f
  2412     0597  2D94               	goto	u997
  2413     0598  0BF2               	decfsz	??_function_alarma+2,f
  2414     0599  2D94               	goto	u997
  2415     059A  2D9B               	nop2
  2416     059B                     l1463:
  2417                           
  2418                           ;mainseguridad.c: 156:    }
  2419     059B  3001               	movlw	1
  2420     059C  07F3               	addwf	function_alarma@i,f
  2421     059D  1803               	skipnc
  2422     059E  0AF4               	incf	function_alarma@i+1,f
  2423     059F  3000               	movlw	0
  2424     05A0  07F4               	addwf	function_alarma@i+1,f
  2425     05A1                     l1465:
  2426     05A1  0874               	movf	function_alarma@i+1,w
  2427     05A2  3A80               	xorlw	128
  2428     05A3  00FF               	movwf	btemp+1
  2429     05A4  3080               	movlw	128
  2430     05A5  027F               	subwf	btemp+1,w
  2431     05A6  1D03               	skipz
  2432     05A7  2DAA               	goto	u785
  2433     05A8  3005               	movlw	5
  2434     05A9  0273               	subwf	function_alarma@i,w
  2435     05AA                     u785:
  2436     05AA  1C03               	skipc
  2437     05AB  2DAD               	goto	u781
  2438     05AC  2DAE               	goto	u780
  2439     05AD                     u781:
  2440     05AD  2D7A               	goto	l1457
  2441     05AE                     u780:
  2442     05AE                     l99:
  2443                           
  2444                           ;mainseguridad.c: 157:     Estado=monitoreo;
  2445     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2446     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2447     05B0  01A5               	clrf	_Estado
  2448     05B1  0AA5               	incf	_Estado,f
  2449     05B2                     l100:
  2450     05B2  0008               	return
  2451     05B3                     __end_of_function_alarma:
  2452                           
  2453                           	psect	text11
  2454     04E2                     __ptext11:	
  2455 ;; *************** function _LCD_Init *****************
  2456 ;; Defined at:
  2457 ;;		line 37 in file "lcd.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0
  2473 ;;      Temps:          2       0       0       0       0
  2474 ;;      Totals:         2       0       0       0       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 1
  2478 ;; This function calls:
  2479 ;;		_LCD_Command
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485     04E2                     _LCD_Init:	
  2486                           ;psect for function _LCD_Init
  2487                           
  2488     04E2                     l1363:	
  2489                           ;incstack = 0
  2490                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2491                           
  2492                           
  2493                           ;lcd.c: 39:     TRISD = 0;
  2494     04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2495     04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2496     04E4  0188               	clrf	8	;volatile
  2497     04E5                     l1365:
  2498                           
  2499                           ;lcd.c: 40:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2500     04E5  3027               	movlw	39
  2501     04E6  00F4               	movwf	??_LCD_Init+1
  2502     04E7  30F5               	movlw	245
  2503     04E8  00F3               	movwf	??_LCD_Init
  2504     04E9                     u1007:
  2505     04E9  0BF3               	decfsz	??_LCD_Init,f
  2506     04EA  2CE9               	goto	u1007
  2507     04EB  0BF4               	decfsz	??_LCD_Init+1,f
  2508     04EC  2CE9               	goto	u1007
  2509     04ED                     l1367:
  2510                           
  2511                           ;lcd.c: 41:     LCD_Command(0x02);
  2512     04ED  3002               	movlw	2
  2513     04EE  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2514     04F3                     l1369:
  2515                           
  2516                           ;lcd.c: 42:     LCD_Command(0x28);
  2517     04F3  3028               	movlw	40
  2518     04F4  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2519     04F9                     l1371:
  2520                           
  2521                           ;lcd.c: 43:     LCD_Command(0x01);
  2522     04F9  3001               	movlw	1
  2523     04FA  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2524     04FF                     l1373:
  2525                           
  2526                           ;lcd.c: 44:     LCD_Command(0x0c);
  2527     04FF  300C               	movlw	12
  2528     0500  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2529     0505                     l1375:
  2530                           
  2531                           ;lcd.c: 45:     LCD_Command(0x06);
  2532     0505  3006               	movlw	6
  2533     0506  120A  118A  250C  120A  118A  	fcall	_LCD_Command
  2534     050B                     l191:
  2535     050B  0008               	return
  2536     050C                     __end_of_LCD_Init:
  2537                           
  2538                           	psect	text12
  2539     050C                     __ptext12:	
  2540 ;; *************** function _LCD_Command *****************
  2541 ;; Defined at:
  2542 ;;		line 61 in file "lcd.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  cmd             1    wreg     unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  cmd             1    2[COMMON] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         1       0       0       0       0
  2558 ;;      Temps:          2       0       0       0       0
  2559 ;;      Totals:         3       0       0       0       0
  2560 ;;Total ram usage:        3 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_function_seguridad
  2566 ;;		_LCD_Init
  2567 ;;		_LCD_String_xy
  2568 ;;		_LCD_Clear
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572     050C                     _LCD_Command:	
  2573                           ;psect for function _LCD_Command
  2574                           
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2578                           ;LCD_Command@cmd stored from wreg
  2579     050C  00F2               	movwf	LCD_Command@cmd
  2580     050D                     l1199:
  2581                           
  2582                           ;lcd.c: 61: void LCD_Command(unsigned char cmd );lcd.c: 62: {;lcd.c: 63:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
  2583     050D  30F0               	movlw	240
  2584     050E  0572               	andwf	LCD_Command@cmd,w
  2585     050F  00F0               	movwf	??_LCD_Command
  2586     0510  1283               	bcf	3,5	;RP0=0, select bank0
  2587     0511  1303               	bcf	3,6	;RP1=0, select bank0
  2588     0512  0808               	movf	8,w	;volatile
  2589     0513  390F               	andlw	15
  2590     0514  0470               	iorwf	??_LCD_Command,w
  2591     0515  0088               	movwf	8	;volatile
  2592     0516                     l1201:
  2593                           
  2594                           ;lcd.c: 64:  RD0 = 0;
  2595     0516  1008               	bcf	8,0	;volatile
  2596     0517                     l1203:
  2597                           
  2598                           ;lcd.c: 65:  RD1 = 1;
  2599     0517  1488               	bsf	8,1	;volatile
  2600     0518                     l1205:
  2601                           
  2602                           ;lcd.c: 66:  __nop();
  2603     0518  0000               	nop
  2604     0519                     l1207:
  2605                           
  2606                           ;lcd.c: 67:  RD1 = 0;
  2607     0519  1283               	bcf	3,5	;RP0=0, select bank0
  2608     051A  1303               	bcf	3,6	;RP1=0, select bank0
  2609     051B  1088               	bcf	8,1	;volatile
  2610     051C                     l1209:
  2611                           
  2612                           ;lcd.c: 68:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2613     051C  3003               	movlw	3
  2614     051D  00F1               	movwf	??_LCD_Command+1
  2615     051E  3097               	movlw	151
  2616     051F  00F0               	movwf	??_LCD_Command
  2617     0520                     u1017:
  2618     0520  0BF0               	decfsz	??_LCD_Command,f
  2619     0521  2D20               	goto	u1017
  2620     0522  0BF1               	decfsz	??_LCD_Command+1,f
  2621     0523  2D20               	goto	u1017
  2622     0524  2D25               	nop2
  2623     0525                     l1211:
  2624                           
  2625                           ;lcd.c: 69:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  2626     0525  0872               	movf	LCD_Command@cmd,w
  2627     0526  00F0               	movwf	??_LCD_Command
  2628     0527  3004               	movlw	4
  2629     0528                     u455:
  2630     0528  1003               	clrc
  2631     0529  0DF0               	rlf	??_LCD_Command,f
  2632     052A  3EFF               	addlw	-1
  2633     052B  1D03               	skipz
  2634     052C  2D28               	goto	u455
  2635     052D  1283               	bcf	3,5	;RP0=0, select bank0
  2636     052E  1303               	bcf	3,6	;RP1=0, select bank0
  2637     052F  0808               	movf	8,w	;volatile
  2638     0530  390F               	andlw	15
  2639     0531  0470               	iorwf	??_LCD_Command,w
  2640     0532  0088               	movwf	8	;volatile
  2641     0533                     l1213:
  2642                           
  2643                           ;lcd.c: 70:  RD1 = 1;
  2644     0533  1488               	bsf	8,1	;volatile
  2645     0534                     l1215:
  2646                           
  2647                           ;lcd.c: 71:  __nop();
  2648     0534  0000               	nop
  2649     0535                     l1217:
  2650                           
  2651                           ;lcd.c: 72:  RD1 = 0;
  2652     0535  1283               	bcf	3,5	;RP0=0, select bank0
  2653     0536  1303               	bcf	3,6	;RP1=0, select bank0
  2654     0537  1088               	bcf	8,1	;volatile
  2655                           
  2656                           ;lcd.c: 73:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2657     0538  3008               	movlw	8
  2658     0539  00F1               	movwf	??_LCD_Command+1
  2659     053A  30C9               	movlw	201
  2660     053B  00F0               	movwf	??_LCD_Command
  2661     053C                     u1027:
  2662     053C  0BF0               	decfsz	??_LCD_Command,f
  2663     053D  2D3C               	goto	u1027
  2664     053E  0BF1               	decfsz	??_LCD_Command+1,f
  2665     053F  2D3C               	goto	u1027
  2666     0540  2D41               	nop2
  2667     0541                     l194:
  2668     0541  0008               	return
  2669     0542                     __end_of_LCD_Command:
  2670     007E                     btemp	set	126	;btemp
  2671     007E                     wtemp0	set	126
  2672                           
  2673                           	psect	config
  2674                           
  2675                           ;Config register CONFIG1 @ 0x2007
  2676                           ;	Oscillator Selection bits
  2677                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2678                           ;	Watchdog Timer Enable bit
  2679                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2680                           ;	Power-up Timer Enable bit
  2681                           ;	PWRTE = OFF, PWRT disabled
  2682                           ;	RE3/MCLR pin function select bit
  2683                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2684                           ;	Code Protection bit
  2685                           ;	CP = OFF, Program memory code protection is disabled
  2686                           ;	Data Code Protection bit
  2687                           ;	CPD = OFF, Data memory code protection is disabled
  2688                           ;	Brown Out Reset Selection bits
  2689                           ;	BOREN = OFF, BOR disabled
  2690                           ;	Internal External Switchover bit
  2691                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2692                           ;	Fail-Safe Clock Monitor Enabled bit
  2693                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2694                           ;	Low Voltage Programming Enable bit
  2695                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2696                           ;	In-Circuit Debugger Mode bit
  2697                           ;	DEBUG = 0x1, unprogrammed default
  2698     2007                     	org	8199
  2699     2007  20D5               	dw	8405
  2700                           
  2701                           ;Config register CONFIG2 @ 0x2008
  2702                           ;	Brown-out Reset Selection bit
  2703                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2704                           ;	Flash Program Memory Self Write Enable bits
  2705                           ;	WRT = OFF, Write protection off
  2706     2008                     	org	8200
  2707     2008  3FFF               	dw	16383

Data Sizes:
    Strings     63
    Constant    5
    Data        16
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_5(CODE[21]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    S650__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), 

    S650__prbuf$ptr	PTR unsigned char  size(1) Largest target is 17
		 -> buffer(BANK0[17]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> buffer(BANK0[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer(BANK0[17]), STR_4(CODE[8]), STR_3(CODE[10]), STR_2(CODE[8]), 
		 -> STR_1(CODE[16]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer(BANK0[17]), STR_4(CODE[8]), STR_3(CODE[10]), STR_2(CODE[8]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_function_seguridad
    _function_seguridad->_LCD_String_xy
    _function_blocked->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    _function_seguridad->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3381
                           _LCD_Init
                    _function_alarma
                   _function_blocked
                 _function_seguridad
                        _keypad_init
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _function_seguridad                                   4     4      0    2143
                                             10 COMMON     4     4      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                      _keypad_getkey
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     3      3     319
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _function_blocked                                     3     3      0    1148
                                             10 COMMON     3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    1104
                                              5 COMMON     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     165
                                              3 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _function_alarma                                      5     5      0      46
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _function_alarma
   _function_blocked
     _LCD_Clear
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
   _function_seguridad
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
     _keypad_getkey
     _strncmp
   _keypad_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Oct 13 15:53:47 2023

                         pc 0002          _function_seguridad 064A                ?_LCD_Command 0070  
                        l91 0495                          l69 0646                          l88 0704  
                        l99 05AE                          fsr 0004                 ?_LCD_String 0073  
                       l100 05B2                         l211 043E                         l203 04BB  
                       l115 045F                         l208 04E1                         l174 07E5  
                       l191 050B                         l194 0541                         l197 0577  
                       l772 05F8                         _RC0 0038                         _RC1 0039  
                       _RC2 003A                         _RD0 0040                         _RD1 0041  
                       u500 0737                         u501 0736                         u510 073E  
                       u511 073D                         u600 078E                         u520 0745  
                       u601 078D                         u521 0744                         u610 0795  
                       u530 074C                         u611 0794                         u531 074B  
                       u460 04BB                         u620 079C                         u540 0752  
                       u700 05BD                         u445 055E                         u461 04BA  
                       u621 079B                         u541 0751                         u701 05BC  
                       u470 04C3                         u630 07A3                         u550 0762  
                       u710 05CD                         u455 0528                         u471 04C2  
                       u631 07A2                         u551 0761                         u711 05CC  
                       u640 07AA                         u560 0769                         u480 070D  
                       u720 05F6                         u800 062D                         u641 07A9  
                       u561 0768                         u721 05F5                         u801 062C  
                       u650 07BA                         u570 0770                         u490 0727  
                       u730 066B                         u810 0634                         u651 07B9  
                       u571 076F                         u491 0726                         u731 066A  
                       u811 0633                         u660 07C1                         u580 0777  
                       u740 0692                         u820 0640                         u661 07C0  
                       u581 0776                         u741 0691                         u821 063F  
                       u670 07C8                         u590 077E                         u750 06A4  
                       u671 07C7                         u591 077D                         u751 06A3  
                       u680 07CF                         u760 06D3                         u681 07CE  
                       u761 06D2                         u690 07E2                         u770 0701  
                       u691 07E1                         u907 072B                         u771 0700  
                       u780 05AE                         u781 05AD                         u917 0756  
                       u790 0622                         u695 07DE                         u927 0782  
                       u791 0621                         u785 05AA                         u937 07AE  
                       u947 0489                         u957 0556                         u877 0683  
                       u967 0572                         u887 06BE                         u977 0439  
                       u897 06ED                         u987 0584                         u997 0594  
       ?_function_seguridad 0070                         _bro 0023                         _idx 0024  
                       fsr0 0004                         indf 0000                 LCD_Char@dat 0072  
                      l1201 0516                        l1211 0525                        l1203 0517  
                      l1213 0533                        l1205 0518                        l1221 0497  
                      l1301 0786                        l1215 0534                        l1207 0519  
                      l1223 04A5                        l1231 04BD                        l1311 0798  
                      l1303 0788                        l1217 0535                        l1209 051C  
                      l1225 04AB                        l1241 04D2                        l1233 04BD  
                      l1321 07B2                        l1313 079D                        l1305 078F  
                      l1401 0679                        l1227 042F                        l1219 0496  
                      l1243 04D8                        l1235 04C3                        l1331 07C4  
                      l1323 07B4                        l1315 079F                        l1307 0791  
                      l1251 071D                        l1411 06A9                        l1403 067D  
                      l1229 0435                        l1181 054C                        l1237 04C7  
                      l1341 07E2                        l1333 07C9                        l1325 07BB  
                      l1309 0796                        l1317 07A3                        l1261 072F  
                      l1245 0705                        l1413 06B4                        l1421 06CB  
                      l1405 068A                        l1191 055B                        l1183 054D  
                      l1239 04CE                        l1335 07CB                        l1327 07BD  
                      l1319 07AA                        l1271 0741                        l1263 0731  
                      l1247 071A                        l1351 05CD                        l1431 06F4  
                      l1423 06D3                        l1415 06B8                        l1407 0692  
                      l1193 0569                        l1185 054E                        l1441 0473  
                      l1329 07C2                        l1337 07CF                        l1281 075A  
                      l1273 0746                        l1265 0738                        l1257 071F  
                      l1249 071A                        l1345 05B4                        l1425 06D8  
                      l1417 06C5                        l1409 06A4                        l1371 04F9  
                      l1363 04E2                        l1451 0578                        l1195 056A  
                      l1187 054F                        l1179 0543                        l1443 0478  
                      l1339 07D5                        l1291 076C                        l1283 075C  
                      l1275 0748                        l1267 073A                        l1259 0727  
                      l1355 05E0                        l1347 05B5                        l1427 06E3  
                      l1435 06FB                        l1419 06C9                        l1373 04FF  
                      l1365 04E5                        l1461 058E                        l1197 056B  
                      l1189 0552                        l1445 0483                        l1293 0771  
                      l1285 0763                        l1269 073F                        l1277 074C  
                      l1349 05BD                        l1357 05E8                        l1437 0701  
                      l1429 06E7                        l1381 045A                        l1199 050D  
                      l1375 0505                        l1367 04ED                        l1463 059B  
                      l1447 0490                        l1295 0773                        l1287 0765  
                      l1279 0752                        l1359 05F6                        l1439 0702  
                      l1391 065A                        l1383 045C                        l1471 05FE  
                      l1369 04F3                        l1465 05A1                        l1457 057A  
                      l1449 0494                        l1289 076A                        l1297 0777  
                      l1393 0660                        l1385 064A                        l1377 044F  
                      l1481 0616                        l1473 0603                        l1459 058B  
                      l1299 077E                        l1395 0666                        l1387 064A  
                      l1379 0459                        l1483 061A                        l1475 0608  
                      l1467 05F9                        l1397 066B                        l1389 064F  
                      l1493 062E                        l1485 061B                        l1477 060C  
                      l1469 05FD                        l1399 0671                        l1495 0634  
                      l1487 0622                        l1479 0612                        l1497 063A  
                      l1489 0628                        l1499 0640                        STR_1 002D  
                      STR_2 004F                        STR_3 003D                        STR_4 0047  
                      STR_5 0018                        u1007 04E9                        u1017 0520  
                      u1027 053C                        _WPUB 0095                        _main 05F9  
                      btemp 007E        ??_function_seguridad 007A                        start 0000  
             _LCD_String_xy 04BC            __end_of_LCD_Char 0578            __end_of_LCD_Init 050C  
                     ?_main 0070                       _PORTB 0006                       _PORTD 0008  
                     _PORTE 0009                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                ?_keypad_init 0070  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_strncmp 05F9              ?_LCD_String_xy 0075            function_alarma@i 0073  
           __initialization 07E6                __end_of_main 064A                      ??_main 007E  
         __end_of_LCD_Clear 043F         keypad_getkey@letras 003C                      _ANSELH 0189  
          LCD_String_xy@msg 0076            LCD_String_xy@pos 0075            LCD_String_xy@row 0078  
                    _OSCCON 008F                      _Estado 0025                      _buffer 0026  
  __end_of_function_blocked 0496            __end_of_password 0018             _var_sensor_hall 0021  
                 ??_strncmp 0073           ??_function_alarma 0070                   ?_LCD_Char 0070  
   __end_of__initialization 07FC                   ?_LCD_Init 0070             ??_LCD_String_xy 0078  
     function_seguridad@key 007D              __pcstackCOMMON 0070                __pidataBANK0 043F  
              ??_LCD_String 0075              _OPTION_REGbits 0081                  __pbssBANK0 0020  
                ??_LCD_Char 0070                  ??_LCD_Init 0073          __end_of_LCD_String 04BC  
                __pmaintext 05F9               _keypad_getkey 0705                  __stringtab 0003  
             LCD_String@msg 0073                     __ptext1 044F                     __ptext2 064A  
                   __ptext3 05B3                     __ptext4 0705                     __ptext5 0473  
                   __ptext6 04BC                     __ptext7 0496                     __ptext8 0542  
                   __ptext9 042F              ?_keypad_getkey 0070                   _LCD_Clear 042F  
                   clrloop0 0428                     _strncmp 05B3        end_of_initialization 07FC  
            LCD_Command@cmd 0072            _var_sensor_metal 0020           ?_function_blocked 0070  
           _function_alarma 0578          ??_function_blocked 007A                  ?_LCD_Clear 0070  
             ??_LCD_Command 0070             ??_keypad_getkey 0070          keypad_getkey@F1268 004F  
       start_initialization 07E6          keypad_getkey@valor 004C       __end_of_LCD_String_xy 04E2  
                init_fetch0 0460     __end_of_function_alarma 05B3                 __pdataBANK0 004F  
       __end_of_LCD_Command 0542                   ___latbits 0002               __pcstackBANK0 003C  
               ??_LCD_Clear 0073               ??_keypad_init 0070                   __pstrings 0003  
     LCD_String_xy@location 0079                    ?_strncmp 0070  __end_of_function_seguridad 0705  
                  _LCD_Char 0542                    _LCD_Init 04E2                   _pass_user 0037  
       __end_of_keypad_init 0460                   clear_ram0 0427            ?_function_alarma 0070  
               _LCD_Command 050C                 __stringbase 0012               _var_sensor_ir 0022  
        __end_of__stringtab 0013                    __ptext10 0578                    __ptext11 04E2  
                  __ptext12 050C                 _keypad_init 044F                  strncmp@len 0071  
                  _password 0013                  _LCD_String 0496       __end_of_keypad_getkey 07E6  
                  init_ram0 0464                   strncmp@s1 0075                   strncmp@s2 0070  
                 stringcode 000D                    stringdir 000D                    stringtab 0003  
            keypad_getkey@i 004D            _function_blocked 0473  
